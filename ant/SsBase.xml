<?xml version="1.0" encoding="GBK"?>
<project name="sindosoft_basic" default="main" basedir=".">
	<property environment="env"/>
	<property name="workDir" value="${env.WORK_DIR}" />
	<property name="antExtDir" value="${basedir}/../jar" />

	<path id="AntExtLib">
		<fileset dir="${antExtDir}" includes="AntExt.jar"/>
		<fileset dir="${antExtDir}" includes="OpenFrm.jar"/>
	</path>

	<taskdef resource="com/asiainfo/tools/ant/antlib.xml" classpathref="AntExtLib"/>

	<target name="init">
		<condition property="realPswd" value="${env.alasPswd}" else="${userPswd}">
			<equals arg1="${userPswd}" arg2="default" casesensitive="true"/>
		</condition>
		<condition property="shadowName" value="${argShadowName}" else="${hostName}">
			<isset property="argShadowName" />
		</condition>
		<condition property="shadowName_" value="${argShadowName}_" else="${hostName}_">
			<isset property="argShadowName" />
		</condition>


		<echo>workDir:${workDir}</echo>
		<input message="请选择用户ID>" addproperty="inputSsUser"/>

		<echo></echo>
		<echo>输入信息:{shadowName:${shadowName}, ssUser:${inputSsUser}}.</echo>
	</target>

	<target name="info" depends="init">
		<loadfile property="jsonFileContent" srcFile="${workDir}/${hostDir}/${shadowName}${inputSsUser}.json"/>

		<echo>
感谢您选用可靠又快速的AlaSS，正式账号完整配置信息如下:

${jsonFileContent}

如若需要，我们可以提供二维码形式的账户信息。

中英对照：
　　服务器 IP  &lt;=&gt; server
　　服务器端口 &lt;=&gt; server_port
　　密码       &lt;=&gt; password
　　加密       &lt;=&gt; method
　　代理端口   &lt;=&gt; local_port

注意事项：
	为了合租主机上其他用户的上网体验，特做如下要求：
	1)您的套餐流量为每月600G，请酌量使用，当月超流量后，帐号将会暂停;
	2)限定1个账号最多3个设备同时上网，以防太多人共用账号(多主机共用路由器上网算1个设备);
	3)不得通过本SS账号下载盗版软件，盗版电影，以防服务器被告侵权;如您违规，可能会被封号;
	4)帐号暂停后，可再充值购买额外流量，600G套餐用户5元购买100G，3T套餐用户5元购买300G流量;

======================================================================================
= 售后服务：
=　　请加入我们的售后服务群：22117476，注意要用企鹅号码哦；
=　　您也可以关注我们的官方网站，http://www.alafafa.com；
=　　服务器如有异动，我们会在在以上地方同步发布公告信息。
=　　!!! 请妥善保管好自己的账号，如果您再次向我们索要账号，需要收费5元哦 !!!
=
= 友情提醒：
=　　!!! 敬请留下你的扣扣号 !!!
=　　!!! 敬请留下你的扣扣号 !!!
=　　!!! 敬请留下你的扣扣号 !!!
=    以便我们为您提供更好的售后服务，如有任何售后问题，请通过扣扣联系我们，谢谢合作！
======================================================================================
		</echo>

		<echo></echo>
		<echo>生成二维码：</echo>
		<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
				outputproperty="qrCodeUrl" command="
						sh ~/maintain/shs/qr_code_sss.sh ~/shadowsocks/${shadowName}${inputSsUser}.json neat"/>
		<exec executable="cmd.exe">
			<arg value="/c"/>
			<arg value="start"/>
			<arg value="&quot;&quot;"/>
			<arg value="&quot;${qrCodeUrl}&quot;"/>
		</exec>
	</target>

	<target name="runall" depends="init">
		<echo>run all shadowsocks service on ${hostAddr}</echo>

		<!--
		start-sss.sh:
				cd ~sindo/shadowsocks
				ls *.json|cut -d. -f1|awk  '{print "nohup /usr/local/bin/ssserver -c " $1".json > logs/nohup_" $1 ".out 2>&1> /dev/null &"}'|sh
				cd -
		stop-sss.sh:
				cd ~sindo/shadowsocks
				ls *.json|cut -d. -f1|cut -d/ -f5|awk  '{print "ps -ef|grep ssserver|grep -v grep|grep "$1".json"}'|sh|awk '{print $2}'|xargs kill
				cd -
		-->
		<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
				failonerror="false" timeout="5000" command=" " />

		<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
				command="
						ps -ef|grep ssserver|grep -v grep|xargs kill -9;
						cd shadowsocks; rm -fr *.json;"/>

		<!--
		-->
		<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
				command="
						ls *.json|cut -d. -f1|awk '{print &quot;nohup /usr/local/bin/ssserver -c &quot; $1 &quot;.json &gt; logs/nohup_&quot; $1 &quot;.out 2>&amp;1 &lt; /dev/null &amp;&quot;}'" />
	</target>

	<target name="kill" depends="init">
		<echo>killing userId: ${hostAddr}\${shadowName}${inputSsUser}.json</echo>

		<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
				failonerror="false" timeout="5000" command="
						ps -ef|grep ssserver|grep -v grep|grep ${shadowName}${inputSsUser}|awk '{print $2}'|xargs kill -9;" />

		<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
				command="
						ps -ef|grep -v grep|grep ${shadowName}{inputSsUser};
						echo +++++++++++++++++++++++++++++++++++++++++++++++++++;
						tail -n 10 shadowsocks/logs/nohup_${shadowName}${inputSsUser}.out;" />
	</target>

	<target name="delete" depends="init">
		<input message="removing userId: ${hostAddr}\${shadowName}${inputSsUser}.json, 你确定么?[n/y]>" addproperty="confirmDelete"/>

		<RunIf if="confirmDelete" value="y">
			<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
					failonerror="false" timeout="5000" command="
							ps -ef|grep ssserver|grep -v grep|grep ${shadowName}${inputSsUser}|awk '{print $2}'|xargs kill -9;
							rm -fr /home/${userName}/shadowsocks/${shadowName}${inputSsUser}.json;" />

			<RunIf if="multiUser">
				<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
						command="
								ps -ef|grep -v grep|grep ${shadowName}{inputSsUser};
								echo +++++++++++++++++++++++++++++++++++++++++++++++++++;
								tail -n 10 shadowsocks/logs/nohup_++++++++.out" />
			</RunIf>
			<RunIf ifNot="multiUser">
				<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
						command="
								ps -ef|grep -v grep|grep ${shadowName}{inputSsUser};
								echo +++++++++++++++++++++++++++++++++++++++++++++++++++;
								tail -n 10 shadowsocks/logs/nohup_${shadowName}${inputSsUser}.out;" />
			</RunIf>
			<delete file="${workDir}/${hostDir}/${shadowName}${inputSsUser}.json"/>
		</RunIf>
	</target>

	<target name="main" depends="init">
		<echo>scping from: ${workDir}/${hostDir}/${shadowName}${inputSsUser}.json</echo>
		<!--
		<echo>scping to:   ${userName}:${realPswd}@${hostAddr}:/home/sindo/shadowsocks</echo>
		-->

		<scp file="${workDir}/${hostDir}/${shadowName}${inputSsUser}.json"
				todir="${userName}:${realPswd}@${hostAddr}:/home/${userName}/shadowsocks/" trust="true"/>

		<echo>starting remote shadowsocks server for ss${inputSsUser}</echo>

		<RunIf ifNot="multiUser">
			<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
					failonerror="false" timeout="5000" command="
							ps -ef|grep ssserver|grep -v grep|grep ${shadowName}${inputSsUser}|awk '{print $2}'|xargs kill -9;
							cd shadowsocks;
							echo mv ${shadowName}${inputSsUser}.json ${shadowName_}ss${inputSsUser}.json;
							nohup /usr/local/bin/ssserver -c ${shadowName}${inputSsUser}.json &gt;logs/nohup_${shadowName}${inputSsUser}.out 2&gt;&amp;1 &lt;/dev/null &amp;">
			</sshexec>

			<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
					command="
							ps -ef|grep -v grep|grep ${shadowName}${inputSsUser};
							tail -n 10 shadowsocks/logs/nohup_${shadowName}${inputSsUser}.out;">
			</sshexec>
		</RunIf>

		<RunIf if="multiUser" value="true">
			<sshexec host="${hostAddr}" username="${userName}" password="${realPswd}" trust="true"
					command="echo SHELL: $$SHELL, TEST: $$TEST; cd ~/maintain/shs; sh ./merge_json.sh"/>
		</RunIf>

		<antcall target="info" />
	</target>
</project>

